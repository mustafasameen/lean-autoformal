{
  "content": "instance decidableLT [DecidableEq \u03b1] [LT \u03b1] [DecidableLT \u03b1] (l\u2081 l\u2082 : List \u03b1) :\n    Decidable (l\u2081 < l\u2082) := decidableLex (\u00b7 < \u00b7) l\u2081 l\u2082\n@[deprecated decidableLT (since := \"2024-12-13\"), inherit_doc decidableLT]\nabbrev hasDecidableLt := @decidableLT\ndef lex [BEq \u03b1] (l\u2081 l\u2082 : List \u03b1) (lt : \u03b1 \u2192 \u03b1 \u2192 Bool := by exact (\u00b7 < \u00b7)) : Bool :=\n  match l\u2081, l\u2082 with\n  | [],      _ :: _  => true\n  | _,      []       => false\n  | a :: as, b :: bs => lt a b || (a == b && lex as bs lt)\ntheorem nil_lex_nil [BEq \u03b1] : lex ([] : List \u03b1) [] lt = false := rfl\n@[simp] theorem nil_lex_cons [BEq \u03b1] {b}",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Data/List/Basic.lean",
    "definition_type": "instance",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Data/List/Basic.lean",
    "definition_name": "decidableLT",
    "has_proof": true
  }
}