{
  "content": "theorem Prod.fst_comp_toSigma :\n    Sigma.fst \u2218 Prod.toSigma = @Prod.fst \u03b1 \u03b2 := by\n  apply funext\n  simp [Prod.toSigma]\ndef insertListIfNewUnit [BEq \u03b1] (l: List ((_ : \u03b1) \u00d7 Unit)) (toInsert: List \u03b1) :\n    List ((_ : \u03b1) \u00d7 Unit) :=\n  match toInsert with\n  | .nil => l\n  | .cons hd tl => insertListIfNewUnit (insertEntryIfNew hd () l) tl\ntheorem insertListIfNewUnit_perm_of_perm_first [BEq \u03b1] [EquivBEq \u03b1] {l1 l2 : List ((_ : \u03b1) \u00d7 Unit)}",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Std/Data/Internal/List/Associative.lean",
    "definition_type": "theorem",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Std/Data/Internal/List/Associative.lean",
    "definition_name": "Prod",
    "has_proof": true
  }
}