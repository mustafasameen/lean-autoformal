{
  "content": "theorem val_lt_of_le (i : Fin b) (h : b \u2264 n) : i.val < n :=\n  Nat.lt_of_lt_of_le i.isLt h\n@[inline] def last (n : Nat) : Fin (n + 1) := \u27e8n, n.lt_succ_self\u27e9\n@[inline] def castLE (h : n \u2264 m) (i : Fin n) : Fin m := \u27e8i, Nat.lt_of_lt_of_le i.2 h\u27e9\n@[inline] def castAdd (m) : Fin n \u2192 Fin (n + m) :=\n  castLE <| Nat.le_add_right n m\ndef addNat (i : Fin n) (m) : Fin (n + m) := \u27e8i + m, Nat.add_lt_add_right i.2 _\u27e9\n@[inline] def rev (i : Fin n) : Fin n := \u27e8n - (i + 1), Nat.sub_lt i.pos (Nat.succ_pos _)\u27e9\n@[inline] def pred {n : Nat}",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Data/Fin/Basic.lean",
    "definition_type": "theorem",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Data/Fin/Basic.lean",
    "definition_name": "val_lt_of_le",
    "has_proof": false
  }
}