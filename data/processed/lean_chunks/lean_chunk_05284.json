{
  "content": "theorem drop_length (l : List \u03b1) : drop l.length l = [] := drop_of_length_le (Nat.le_refl _)\n@[simp] theorem take_length (l : List \u03b1) : take l.length l = l := take_of_length_le (Nat.le_refl _)\n@[simp]\ntheorem getElem_cons_drop : \u2200 (l : List \u03b1) (i : Nat) (h : i < l.length),\n    l[i] :: drop (i + 1) l = drop i l\n  | _::_, 0, _ => rfl\n  | _::_, i+1, h => getElem_cons_drop _ i (Nat.add_one_lt_add_one_iff.mp h)\ntheorem drop_eq_getElem_cons {i}",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Data/List/TakeDrop.lean",
    "definition_type": "theorem",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Data/List/TakeDrop.lean",
    "definition_name": "drop_length",
    "has_proof": false
  }
}