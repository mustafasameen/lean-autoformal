{
  "content": "simp [h, Nat.sub_add_cancel]\nexample (x : Nat) : (if h : 1 \u2264 x then x - 1 + 1 else 0) = (if _h : 1 \u2264 x then x else 0) := by\n  simp (config := {contextual := true}) [h, Nat.sub_add_cancel]\ntheorem my_thm : a \u2227 a \u2194 a := \u27e8fun h => h.1, fun h => \u27e8h, h\u27e9\u27e9\nexample : a \u2227 (b \u2227 b) \u2194 a \u2227 b := by simp [my_thm]\nexample : (a \u2227 (b \u2227 b)) = (a \u2227 b) := by simp only [my_thm]\nexample : x - 1 + 1 = x := by simp (discharger := sorry) [Nat.sub_add_cancel]\nsection\nattribute [-simp] Nat.add_left_eq_self Nat.add_right_eq_self\nexample (h' : bla x = x) : x + x = x := by\n  simp [bla, h] at *\n  exact h'\nexample (h' : bla x = x) : x + x = x := by\n  simp [bla, h] at h'\n  exact h'\nexample {\u03b1 : Type} (xs ys : List \u03b1) (h\u2081 : bla x = y) (h\u2082 : (xs ++ ys).length = y) : x = length xs := by\n  simp [bla, h, List.length_append] at *\nexample {\u03b1 : Type} (xs ys : List \u03b1) (h\u2081 : bla x = y) (h\u2082 : (xs ++ ys).length = y) : x = length xs := by\n  simp [bla, h, List.length_append, Nat.add_one] at *",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/tests/lean/simp_trace.lean",
    "definition_type": "def",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/tests/lean/simp_trace.lean",
    "definition_name": "foo",
    "has_proof": true
  }
}