{
  "content": "cases n <;> simp\n@[deprecated \"Use `(List.range' 1 n).reverse` instead of `iota n`.\" (since := \"2025-01-20\"), simp]\ntheorem head_iota (n : Nat) (h) : (iota n).head h = n := by\n  cases n with\n  | zero => simp at h\n  | succ n => simp\n@[deprecated \"Use `(List.range' 1 n).reverse` instead of `iota n`.\" (since := \"2025-01-20\"), simp]\ntheorem tail_iota (n : Nat) : (iota n).tail = iota (n - 1) := by\n  cases n <;> simp\n@[deprecated \"Use `(List.range' 1 n).reverse` instead of `iota n`.\" (since := \"2025-01-20\"), simp]\ntheorem reverse_iota : reverse (iota n) = range' 1 n := by\n  induction n with\n  | zero => simp\n  | succ n ih =>\n    rw [iota_succ, reverse_cons, ih, range'_1_concat, Nat.add_comm]\n@[deprecated \"Use `(List.range' 1 n).reverse` instead of `iota n`.\" (since := \"2025-01-20\"), simp]\ntheorem getLast?_iota (n : Nat) : (iota n).getLast? = if n = 0 then none else some 1 := by\n  rw [getLast?_eq_head?_reverse]\n  simp [head?_range']",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Data/List/Nat/Range.lean",
    "definition_type": "theorem",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Data/List/Nat/Range.lean",
    "definition_name": "iota_inj",
    "has_proof": true
  }
}