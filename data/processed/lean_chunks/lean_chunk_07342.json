{
  "content": "theorem blastShiftLeftConst.go_le_size (aig : AIG \u03b1) (distance : Nat) (input : AIG.RefVec aig w)\n    (curr : Nat) (hcurr : curr \u2264 w) (s : AIG.RefVec aig curr) :\n    aig.decls.size \u2264 (go aig input distance curr hcurr s).aig.decls.size := by\n  unfold go\n  split\n  \u00b7 dsimp only\n    split\n    \u00b7 refine Nat.le_trans ?_ (by apply go_le_size)\n      apply AIG.LawfulOperator.le_size\n    \u00b7 refine Nat.le_trans ?_ (by apply go_le_size)\n      omega\n  \u00b7 simp\ntermination_by w - curr\ntheorem blastShiftLeftConst.go_decl_eq (aig : AIG \u03b1) (distance : Nat) (input : AIG.RefVec aig w)\n    (curr : Nat) (hcurr : curr \u2264 w) (s : AIG.RefVec aig curr) :\n    \u2200 (idx : Nat) (h1) (h2),\n        (go aig input distance curr hcurr s).aig.decls[idx]'h2 = aig.decls[idx]'h1 := by\n  generalize hgo : go aig input distance curr hcurr s = res\n  unfold go at hgo\n  split at hgo\n  \u00b7 dsimp only at hgo\n    split at hgo\n    \u00b7 rw [\u2190 hgo]\n      intro idx h1 h2\n      rw [blastShiftLeftConst.go_decl_eq]",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/ShiftLeft.lean",
    "definition_type": "theorem",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Std/Tactic/BVDecide/Bitblast/BVExpr/Circuit/Impl/Operations/ShiftLeft.lean",
    "definition_name": "blastShiftLeftConst",
    "has_proof": true
  }
}