{
  "content": "| (s\u2082', \u03c3\u2082) => (seq s\u2081' s\u2082', \u03c3\u2082)\n  | ite c s\u2081 s\u2082 =>\n    match s\u2081.constProp \u03c3, s\u2082.constProp \u03c3 with\n    | (s\u2081', \u03c3\u2081), (s\u2082', \u03c3\u2082) => (ite (c.constProp \u03c3) s\u2081' s\u2082', \u03c3\u2081.join \u03c3\u2082)\n  | .while c b => (.while (c.constProp \u22a5) (b.constProp \u22a5).1, \u22a5)\ndef State.le (\u03c3\u2081 \u03c3\u2082 : State) : Prop :=\n  \u2200 \u2983x : Var\u2984 \u2983v : Val\u2984, \u03c3\u2081.find? x = some v \u2192 \u03c3\u2082.find? x = some v\ninfix:50 \" \u227c \" => State.le\ntheorem State.le_refl (\u03c3 : State) : \u03c3 \u227c \u03c3 :=\n  fun _ _ h => h\ntheorem State.le_trans : \u03c3\u2081 \u227c \u03c3\u2082 \u2192 \u03c3\u2082 \u227c \u03c3\u2083 \u2192 \u03c3\u2081 \u227c \u03c3\u2083 :=\n  fun h\u2081 h\u2082 x v h => h\u2082 (h\u2081 h)\ntheorem State.bot_le (\u03c3 : State) : \u22a5 \u227c \u03c3 :=\n  fun _ _ h => by contradiction\ntheorem State.erase_le_cons (h : \u03c3' \u227c \u03c3) : \u03c3'.erase x \u227c ((x, v) :: \u03c3) := by\n  intro y w hf'\n  by_cases hyx : y = x <;> simp [*] at hf' |-\n  exact h hf'\ntheorem State.cons_le_cons (h : \u03c3' \u227c \u03c3) : (x, v) :: \u03c3' \u227c (x, v) :: \u03c3 := by\n  intro y w hf'\n  by_cases hyx : y = x <;> simp [*] at hf' |-\n  next => assumption\n  next => exact h hf'",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/tests/lean/run/constProp.lean",
    "definition_type": "theorem",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/tests/lean/run/constProp.lean",
    "definition_name": "Stmt",
    "has_proof": true
  }
}