{
  "content": "theorem append_inj_right (h : s\u2081 ++ t\u2081 = s\u2082 ++ t\u2082) (hl : length s\u2081 = length s\u2082) : t\u2081 = t\u2082 :=\n  (append_inj h hl).right\ntheorem append_inj_left (h : s\u2081 ++ t\u2081 = s\u2082 ++ t\u2082) (hl : length s\u2081 = length s\u2082) : s\u2081 = s\u2082 :=\n  (append_inj h hl).left\ntheorem append_inj_right' (h : s\u2081 ++ t\u2081 = s\u2082 ++ t\u2082) (hl : length t\u2081 = length t\u2082) : t\u2081 = t\u2082 :=\n  (append_inj' h hl).right\ntheorem concat_nil (a : \u03b1) : concat [] a = [a] :=\n  rfl\ntheorem concat_cons (a b : \u03b1) (l : List \u03b1) : concat (a :: l) b = a :: concat l b :=\n  rfl\ntheorem init_eq_of_concat_eq {a b : \u03b1}",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Data/List/Lemmas.lean",
    "definition_type": "theorem",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Data/List/Lemmas.lean",
    "definition_name": "append_inj_right",
    "has_proof": false
  }
}