{
  "content": "withoutPosition (many1 ident >> ppIndent optDeclSig >>\n    optional (Term.binderTactic <|> Term.binderDefault)) >> \")\"\ndef structImplicitBinder := leading_parser\n  atomic (declModifiers true >> \"{\") >> withoutPosition (many1 ident >> declSig) >> \"}\"\ndef structInstBinder     := leading_parser\n  atomic (declModifiers true >> \"[\") >> withoutPosition (many1 ident >> declSig) >> \"]\"\ndef structSimpleBinder   := leading_parser\n  atomic (declModifiers true >> ident) >> optDeclSig >>\n  optional (Term.binderTactic <|> Term.binderDefault)\ndef structFields         := leading_parser\n  manyIndent <|\n    ppLine >> checkColGe >> ppGroup (\n      structExplicitBinder <|> structImplicitBinder <|>\n      structInstBinder <|> structSimpleBinder)\ndef structCtor           := leading_parser\n  atomic (ppIndent (declModifiers true >> ident >> \" :: \"))\ndef structureTk          := leading_parser\n  \"structure \"\ndef classTk              := leading_parser\n  \"class \"\ndef structParent        := leading_parser",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Lean/Parser/Command.lean",
    "definition_type": "def",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Lean/Parser/Command.lean",
    "definition_name": "declVal",
    "has_proof": false
  }
}