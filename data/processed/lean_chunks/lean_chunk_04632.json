{
  "content": "apply norm_eq_coeff'\nprivate theorem mul_le_zero_iff (a k : Int) (h\u2081 : k > 0) : k * a \u2264 0 \u2194 a \u2264 0 := by\n  constructor\n  \u00b7 intro h\n    rw [\u2190 Int.mul_zero k] at h\n    exact Int.le_of_mul_le_mul_left h h\u2081\n  \u00b7 intro h\n    replace h := Int.mul_le_mul_of_nonneg_left h (Int.le_of_lt h\u2081)\n    simp at h; assumption\nprivate theorem norm_le_coeff' (ctx : Context) (p p' : Poly) (k : Int) : p = p'.mul k \u2192 k > 0 \u2192 (p.denote ctx \u2264 0 \u2194 p'.denote ctx \u2264 0) := by\n  simp [norm_eq_coeff_cert]\n  intro; subst p; intro h; simp [mul_le_zero_iff, *]\ntheorem norm_le_coeff (ctx : Context) (lhs rhs : Expr) (p : Poly) (k : Int)\n    : norm_eq_coeff_cert lhs rhs p k \u2192 (lhs.denote ctx \u2264 rhs.denote ctx) = (p.denote' ctx \u2264 0) := by\n  simp [norm_eq_coeff_cert]\n  rw [norm_le ctx lhs rhs (lhs.sub rhs).norm BEq.refl, Poly.denote'_eq_denote]\n  apply norm_le_coeff'\nprivate theorem mul_add_cmod_le_iff {a k b : Int}",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Data/Int/Linear.lean",
    "definition_type": "theorem",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Data/Int/Linear.lean",
    "definition_name": "Expr",
    "has_proof": true
  }
}