{
  "content": "have h1 := of_maxLiteral_eq_some' f h clause hclause1 hlocal\n  have h2 := Clause.of_maxLiteral_eq_some clause hlocal lit hclause2\n  omega\ntheorem of_maxLiteral_eq_none (f : CNF Nat) (h : f.maxLiteral = none) :\n    \u2200 lit, \u00acMem lit f := by\n  intro lit hlit\n  simp only [maxLiteral, List.max?_eq_none_iff] at h\n  dsimp [Mem] at hlit\n  rcases hlit with \u27e8clause, \u27e8hclause1, hclause2\u27e9\u27e9\n  have := Clause.of_maxLiteral_eq_none clause (List.forall_none_of_filterMap_eq_nil h clause hclause1) lit\n  contradiction\ndef numLiterals (f : CNF Nat) :=\n  match f.maxLiteral with\n  | none => 0\n  | some n => n + 1\ntheorem lt_numLiterals {f : CNF Nat}",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Std/Sat/CNF/RelabelFin.lean",
    "definition_type": "theorem",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Std/Sat/CNF/RelabelFin.lean",
    "definition_name": "Clause",
    "has_proof": true
  }
}