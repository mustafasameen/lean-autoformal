{
  "content": "theorem Power2.mul : Power2 n \u2192 Power2 m \u2192 Power2 (n*m) := by\n  intro h1 h2\n  induction h2 with\n  | base      => simp_all\n  | ind h2 ih => exact mul_left_comm .. \u25b8 ind ih\nset_option trace.Elab.definition.structural true in\nset_option trace.Meta.IndPredBelow.match true in\nset_option pp.explicit true in\ntheorem Power2.mul' : Power2 n \u2192 Power2 m \u2192 Power2 (n*m)\n | h1, base => by simp_all\n | h1, ind h2 => mul_left_comm .. \u25b8 ind (mul' h1 h2)\ninductive tm : Type :=\n  | C : Nat \u2192 tm\n  | P : tm \u2192 tm \u2192 tm\nopen tm\nset_option hygiene false in\ninfixl:40 \" ==> \" => step\ninductive step : tm \u2192 tm \u2192 Prop :=\n  | ST_PlusConstConst : \u2200 n1 n2,\n      P (C n1) (C n2) ==> C (n1 + n2)\n  | ST_Plus1 : \u2200 t1 t1' t2,\n      t1 ==> t1' \u2192\n      P t1 t2 ==> P t1' t2\n  | ST_Plus2 : \u2200 n1 t2 t2',\n      t2 ==> t2' \u2192\n      P (C n1) t2 ==> P (C n1) t2'\ndef deterministic {X : Type}",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/tests/lean/run/inductive_pred.lean",
    "definition_type": "theorem",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/tests/lean/run/inductive_pred.lean",
    "definition_name": "Power2",
    "has_proof": true
  }
}