{
  "content": "```\nstructure Signature where\n<missing>`. If we insert an `s` after the `t`, the last\ncommand completely preceding the edit location is the partial command containing the docstring. Thus\nwe need to go up two commands to ensure we reparse the `structure` command as well. This kind of\nnested docstring is the only part of the grammar to our knowledge that requires going up at least\ntwo commands; as we never backtrack across more than one docstring, going up two commands should\nalso be sufficient.\nFinally, a more actually principled and generic solution would be to invalidate a syntax tree when\nthe parser has reached the edit location during parsing. If it did not, surely the edit cannot have\nan effect on the syntax tree in question. Sadly such a \"high-water mark\" parser position does not\nexist currently and likely it could at best be approximated by e.g. \"furthest `tokenFn` parse\". Thus\nwe remain at \"go up two commands\" at this point.\n-/\nset_option linter.missingDocs true",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Lean/Language/Lean.lean",
    "definition_type": "structure",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Lean/Language/Lean.lean",
    "definition_name": "and"
  }
}