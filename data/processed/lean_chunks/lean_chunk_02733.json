{
  "content": "def getTrailing? (info : SourceInfo) : Option Substring :=\n  match info with\n  | original (trailing := trailing) .. => some trailing\n  | _                                  => none\ndef getTrailingTailPos? (info : SourceInfo) (canonicalOnly := false) : Option String.Pos :=\n  match info.getTrailing? with\n  | some trailing => some trailing.stopPos\n  | none          => info.getTailPos? canonicalOnly\nend SourceInfo\nabbrev SyntaxNodeKind := Name\ninductive Syntax.Preresolved where\n  | decl (n : Name) (fields : List String)\ninductive Syntax where\n  | missing : Syntax\n  | node   (info : SourceInfo) (kind : SyntaxNodeKind) (args : Array Syntax) : Syntax\n  | atom   (info : SourceInfo) (val : String) : Syntax\n  | ident  (info : SourceInfo) (rawVal : Substring) (val : Name) (preresolved : List Syntax.Preresolved) : Syntax\ndef Syntax.node2 (info : SourceInfo) (kind : SyntaxNodeKind) (a\u2081 a\u2082 : Syntax) : Syntax :=\n  Syntax.node info kind (Array.mkArray2 a\u2081 a\u2082)",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Prelude.lean",
    "definition_type": "inductive",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Prelude.lean",
    "definition_name": "Name"
  }
}