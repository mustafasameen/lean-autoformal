{
  "content": "theorem Balanced.balRight (hl : l.Balanced cl (n + 1)) (hr : r.RedRed True n) :\n    (balRight l v r).RedRed (cl = red) (n + 1) := by\n  unfold balRight; split\n  \u00b7 next b y c => exact\n    let \u27e8cb, cc, hb, hc\u27e9 := hr.of_red\n    match cl with\n    | red => .redred rfl hl (.black hb hc)\n    | black => .balanced (.red hl (.black hb hc))\n  \u00b7 next H => exact match hr with\n    | .redred .. => nomatch H _ _ _ rfl\n    | .balanced hr => match hl with\n      | .black hb hc =>\n        let \u27e8c, h\u27e9 := RedRed.balance1 (.redred trivial hb hc) hr; .balanced h\n      | .red (.black ha hb) (.black hc hd) =>\n        let \u27e8c, h\u27e9 := RedRed.balance1 (.redred trivial ha hb) hc; .redred rfl h (.black hd hr)\nprotected theorem Balanced.balLeft (hl : l.RedRed True n) (hr : r.Balanced cr (n + 1)) :\n    (balLeft l v r).RedRed (cr = red) (n + 1) := by\n  unfold balLeft; split\n  \u00b7 next a x b => exact\n    let \u27e8ca, cb, ha, hb\u27e9 := hl.of_red\n    match cr with\n    | red => .redred rfl (.black ha hb) hr",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/tests/lean/run/nomatch_regression.lean",
    "definition_type": "theorem",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/tests/lean/run/nomatch_regression.lean",
    "definition_name": "Balanced",
    "has_proof": true
  }
}