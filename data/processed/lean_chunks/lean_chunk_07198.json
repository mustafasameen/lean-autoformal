{
  "content": "let nameBody := name ++ \"body\"\n  let nameMerge := name ++ \"merge\"\n  let headerbb \u2190 LLVM.appendBasicBlockInContext llvmctx fn nameHeader\n  let _ \u2190 LLVM.buildBr builder headerbb\n  let bodybb \u2190 LLVM.appendBasicBlockInContext llvmctx fn nameBody\n  let mergebb \u2190 LLVM.appendBasicBlockInContext llvmctx fn nameMerge\n  LLVM.positionBuilderAtEnd builder headerbb\n  let cond \u2190 condcodegen builder\n  let _ \u2190 LLVM.buildCondBr builder cond bodybb mergebb\n  LLVM.positionBuilderAtEnd builder bodybb\n  bodycodegen builder\n  let _ \u2190 LLVM.buildBr builder headerbb\n  LLVM.positionBuilderAtEnd builder mergebb\ndef buildIfThen_ (builder : LLVM.Builder llvmctx) (name : String) (brval : LLVM.Value llvmctx)\n    (thencodegen : LLVM.Builder llvmctx \u2192 M llvmctx ShouldForwardControlFlow) : M llvmctx Unit := do\n  let fn \u2190 builderGetInsertionFn builder\n  let nameThen := name ++ \"Then\"\n  let nameElse := name ++ \"Else\"\n  let nameMerge := name ++ \"Merge\"\n  let thenbb \u2190 LLVM.appendBasicBlockInContext llvmctx fn nameThen",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Lean/Compiler/IR/EmitLLVM.lean",
    "definition_type": "def",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Lean/Compiler/IR/EmitLLVM.lean",
    "definition_name": "leanMainFn"
  }
}