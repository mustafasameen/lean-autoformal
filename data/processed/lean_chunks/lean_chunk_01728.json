{
  "content": "theorem ex1 (n : Nat) (h : isEven (n+2) = true) : isEven n = true := by\n  replace h := eq_false_of_not_eq_true h\ntrace_state\n  replace h := eq_true_of_not_eq_false h\n  exact h\nend EvenOdd\nnamespace MutualIndNonMutualFun\nmutual\ninductive A\n  | self : A \u2192 A\n  | other : B \u2192 A\n  | empty\ninductive B\n  | self : B \u2192 B\n  | other : A \u2192 B\n  | empty\nend\ndef A.self_size : A \u2192 Nat\n  | .self a => a.self_size + 1\n  | .other _ => 0\n  | .empty => 0\ntermination_by structural x => x\ndef B.self_size : B \u2192 Nat\n  | .self b => b.self_size + 1\n  | .other _ => 0\n  | .empty => 0\ntermination_by structural x => x\ndef A.self_size_with_param : Nat \u2192 A \u2192 Nat\n  | n, .self a => a.self_size_with_param n + n\n  | _, .other _ => 0\n  | _, .empty => 0\ntermination_by structural _ x => x\nmutual\ndef A.weird_size1 : A \u2192 Nat\n  | .self a => a.weird_size2 + 1\n  | .other _ => 0\n  | .empty => 0\ntermination_by structural x => x\ndef A.weird_size2 : A \u2192 Nat\n  | .self a => a.weird_size3 + 1\n  | .other _ => 0\n  | .empty => 0",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/tests/lean/run/structuralMutual.lean",
    "definition_type": "theorem",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/tests/lean/run/structuralMutual.lean",
    "definition_name": "ex1",
    "has_proof": true
  }
}