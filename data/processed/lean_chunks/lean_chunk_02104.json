{
  "content": "theorem Stmt.constProp_correct (h\u2081 : (\u03c3\u2081, s) \u21d3 \u03c3\u2082) (h\u2082 : \u03c3\u2081' \u227c \u03c3\u2081) : (\u03c3\u2081, (s.constProp \u03c3\u2081').1) \u21d3 \u03c3\u2082 := by\n  induction h\u2081 generalizing \u03c3\u2081' with simp_all\n  | skip => exact Bigstep.skip\n  | assign heq =>\n    split <;> simp\n    next h =>\n      have heq' := Expr.eval_constProp_of_eq_of_sub heq h\u2082\n      rw [\u2190 Expr.eval_simplify, h] at heq'\n      simp at heq'\n      apply Bigstep.assign; simp [*]\n    next =>\n      have heq' := Expr.eval_constProp_of_eq_of_sub heq h\u2082\n      rw [\u2190 Expr.eval_simplify] at heq'\n      apply Bigstep.assign heq'\n  | seq h\u2081 h\u2082 ih\u2081 ih\u2082 =>\n    apply Bigstep.seq (ih\u2081 h\u2082) (ih\u2082 (constProp_sub h\u2081 h\u2082))\n  | whileTrue heq h\u2081 h\u2082 ih\u2081 ih\u2082 =>\n    have ih\u2081 := ih\u2081 (State.bot_le _)\n    have ih\u2082 := ih\u2082 (State.bot_le _)\n    exact Bigstep.whileTrue heq ih\u2081 ih\u2082\n  | whileFalse heq =>\n    exact Bigstep.whileFalse heq\n  | ifTrue heq h ih =>\n    exact Bigstep.ifTrue (Expr.eval_constProp_of_eq_of_sub heq h\u2082) (ih h\u2082)\n  | ifFalse heq h ih =>",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/tests/lean/run/constProp.lean",
    "definition_type": "theorem",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/tests/lean/run/constProp.lean",
    "definition_name": "Stmt",
    "has_proof": true
  }
}