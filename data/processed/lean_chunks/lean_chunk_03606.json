{
  "content": "theorem zipWith_comm (f : \u03b1 \u2192 \u03b2 \u2192 \u03b3) (as : Array \u03b1) (bs : Array \u03b2) :\n    zipWith f as bs = zipWith (fun b a => f a b) bs as := by\n  cases as\n  cases bs\n  simpa using List.zipWith_comm _ _ _\ntheorem zipWith_comm_of_comm (f : \u03b1 \u2192 \u03b1 \u2192 \u03b2) (comm : \u2200 x y : \u03b1, f x y = f y x) (xs ys : Array \u03b1) :\n    zipWith f xs ys = zipWith f ys xs := by\n  rw [zipWith_comm]\n  simp only [comm]\n@[simp]\ntheorem zipWith_self (f : \u03b1 \u2192 \u03b1 \u2192 \u03b4) (xs : Array \u03b1) : zipWith f xs xs = xs.map fun a => f a a := by\n  cases xs\n  simp\ntheorem getElem?_zipWith {f : \u03b1 \u2192 \u03b2 \u2192 \u03b3}",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Data/Array/Zip.lean",
    "definition_type": "theorem",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Data/Array/Zip.lean",
    "definition_name": "zipWith_comm",
    "has_proof": true
  }
}