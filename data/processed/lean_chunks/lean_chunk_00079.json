{
  "content": "end\nmacro \"ignoreArg \" id:declId sig:declSig : command => `(opaque $id $sig)\nignoreArg ignoredMacroVariable (x : UInt32) : UInt32\ntheorem not_eq_zero_of_lt (h : b < a) : a \u2260 0 := by\n  cases a\n  exact absurd h (Nat.not_lt_zero _)\n  apply Nat.noConfusion\nexample (a : Nat) : Nat := _\nexample (a : Nat) : Nat := sorry\nexample (a : sorry) : Nat := 0\nexample (a : Nat) : Nat := by\ntheorem Fin.eqq_of_val_eq {n : Nat} : \u2200 {x y : Fin n}, x.val = y.val \u2192 x = y\n  | \u27e8_, _\u27e9, _, rfl => rfl\ndef Nat.discriminate (n : Nat) (H1 : n = 0 \u2192 \u03b1) (H2 : \u2200 m, n = succ m \u2192 \u03b1) : \u03b1 :=\n  match n with\n  | 0 => H1 rfl\n  | succ m => H2 m rfl\ntheorem problematicAlias (n : A) (i : Nat) (h : i \u2264 n.out) : i \u2264 n.out :=\n  match n with\n  | .intro _ => by assumption\nexample : (x = y) \u2192 y = x\n  | .refl _ => .refl _\nset_option linter.unusedVariables.analyzeTactics true in\ntheorem lexicalTacticUse' (p : \u03b1 \u2192 Prop) (ha : p a) (hb : p b) : p b := by\n  simp [ha, hb]",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/tests/lean/linterUnusedVariables.lean",
    "definition_type": "def",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/tests/lean/linterUnusedVariables.lean",
    "definition_name": "autoImplicitVariable",
    "has_proof": true
  }
}