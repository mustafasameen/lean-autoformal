{
  "content": "namespace Name\n@[export lean_name_mk_string]\nabbrev mkStr (p : Name) (s : String) : Name :=\n  Name.str p s\n@[export lean_name_mk_numeral]\nabbrev mkNum (p : Name) (v : Nat) : Name :=\n  Name.num p v\nabbrev mkSimple (s : String) : Name :=\n  .str .anonymous s\n@[reducible] def mkStr2 (s\u2081 s\u2082 : String) : Name :=\n  .str (.str .anonymous s\u2081) s\u2082\n@[reducible] def mkStr4 (s\u2081 s\u2082 s\u2083 s\u2084 : String) : Name :=\n  .str (.str (.str (.str .anonymous s\u2081) s\u2082) s\u2083) s\u2084\n@[reducible] def mkStr6 (s\u2081 s\u2082 s\u2083 s\u2084 s\u2085 s\u2086 : String) : Name :=\n  .str (.str (.str (.str (.str (.str .anonymous s\u2081) s\u2082) s\u2083) s\u2084) s\u2085) s\u2086\n@[reducible] def mkStr8 (s\u2081 s\u2082 s\u2083 s\u2084 s\u2085 s\u2086 s\u2087 s\u2088 : String) : Name :=\n  .str (.str (.str (.str (.str (.str (.str (.str .anonymous s\u2081) s\u2082) s\u2083) s\u2084) s\u2085) s\u2086) s\u2087) s\u2088\ndef appendCore : Name \u2192 Name \u2192 Name\n  | n, .anonymous => n\n  | n, .str p s => .str (appendCore n p) s\n  | n, .num p d => .num (appendCore n p) d\nend Name\ndef maxRecDepthErrorMessage : String :=",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Prelude.lean",
    "definition_type": "instance",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Prelude.lean",
    "definition_name": "nonBacktrackable"
  }
}