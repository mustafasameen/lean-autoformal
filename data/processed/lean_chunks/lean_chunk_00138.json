{
  "content": "def y := 10\ndef _root_.Bla.f (x : Nat) := x + y\n#check Bla.f\nexample : Bla.f 5 = 15 := rfl\ndef _root_.g (x : Nat) :=\n  match x with\n  | 0 => 1\n  | x+1 => 2*g x\ndef _root_.Boo.g (x : Nat) :=\n  match x with\n  | 0 => 1\n  | x+1 => 3 * Boo.g x\nprotected def _root_.h (x : Nat) := x\nexample : g 3 = 8 := rfl\nexample : Boo.g 2 = 9 := rfl\nend Foo\ndef _root_ (y : Nat) := y + 1\ndef _root_._root_ (y : Nat) := y\ndef _root_.f._root_ (y : Nat) := y\nprotected def _root_.h (x : Nat) := x\nprotected def _root_.Boo.h (x : Nat) := x\nexample : Boo.h x = x := rfl\n#check h\n#check f\nopen Bla\n#check f\nnamespace Test\nmutual\n  def _root_.isEven (x : Nat) :=\n    match x with\n    | 0 => true\n    | x+1 => isOdd x\n  def _root_.isOdd (x : Nat) :=\n    match x with\n    | 0 => false\n    | x+1 => isEven x\nend\nprivate def _root_.prv (x : Nat) := x + x + x\nexample : prv 5 = 15 := rfl\nend Test\nexample : isEven 0  = true := by simp! [isOdd, isEven]\nexample : isOdd 1   = true := by simp! [isOdd, isEven]",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/tests/lean/root.lean",
    "definition_type": "def",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/tests/lean/root.lean",
    "definition_name": "y",
    "has_proof": true
  }
}