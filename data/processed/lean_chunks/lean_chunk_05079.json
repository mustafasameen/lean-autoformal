{
  "content": "theorem mapM'_eq_mapM [Monad m] [LawfulMonad m] (f : \u03b1 \u2192 m \u03b2) (l : List \u03b1) :\n    mapM' f l = mapM f l := by simp [go, mapM] where\n  go : \u2200 l acc, mapM.loop f l acc = return acc.reverse ++ (\u2190 mapM' f l)\n    | [], acc => by simp [mapM.loop, mapM']\n    | a::l, acc => by simp [go l, mapM.loop, mapM']\n@[simp] theorem mapM_nil [Monad m] (f : \u03b1 \u2192 m \u03b2) : [].mapM f = pure [] := rfl\n@[simp] theorem mapM_cons [Monad m] [LawfulMonad m] (f : \u03b1 \u2192 m \u03b2) :\n    (a :: l).mapM f = (return (\u2190 f a) :: (\u2190 l.mapM f)) := by simp [\u2190 mapM'_eq_mapM, mapM']\n@[simp] theorem mapM_id {l : List \u03b1}",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Data/List/Monadic.lean",
    "definition_type": "theorem",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Data/List/Monadic.lean",
    "definition_name": "mapM",
    "has_proof": true
  }
}