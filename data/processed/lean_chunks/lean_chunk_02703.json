{
  "content": "instance : LT UInt32 where\n  lt a b := LT.lt a.toBitVec b.toBitVec\ninstance : LE UInt32 where\n  le a b := LE.le a.toBitVec b.toBitVec\n@[extern \"lean_uint32_dec_lt\"]\ndef UInt32.decLt (a b : UInt32) : Decidable (LT.lt a b) :=\n  inferInstanceAs (Decidable (LT.lt a.toBitVec b.toBitVec))\n@[extern \"lean_uint32_dec_le\"]\ndef UInt32.decLe (a b : UInt32) : Decidable (LE.le a b) :=\n  inferInstanceAs (Decidable (LE.le a.toBitVec b.toBitVec))\ninstance (a b : UInt32) : Decidable (LT.lt a b) := UInt32.decLt a b\ninstance (a b : UInt32) : Decidable (LE.le a b) := UInt32.decLe a b\ninstance : Max UInt32 := maxOfLe\ninstance : Min UInt32 := minOfLe\nstructure UInt64 where\n  ofBitVec ::\n  toBitVec: BitVec 64\nattribute [extern \"lean_uint64_of_nat_mk\"] UInt64.ofBitVec\nattribute [extern \"lean_uint64_to_nat\"] UInt64.toBitVec\n@[extern \"lean_uint64_of_nat\"]\ndef UInt64.ofNatLT (n : @& Nat) (h : LT.lt n UInt64.size) : UInt64 where\n  toBitVec := BitVec.ofNatLT n h\nset_option bootstrap.genMatcherCode false in",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Prelude.lean",
    "definition_type": "structure",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Prelude.lean",
    "definition_name": "Fin",
    "has_proof": false
  }
}