{
  "content": "theorem forIn_cons [Monad m] (f : \u03b1 \u2192 \u03b2 \u2192 m (ForInStep \u03b2)) (a : \u03b1) (as : List \u03b1) (b : \u03b2) :\n    forIn (a::as) b f = f a b >>= fun | ForInStep.done b => pure b | ForInStep.yield b => forIn as b f := by\n  have := forIn'_cons (a := a) (as := as) (fun a' _ b => f a' b) b\n  simpa only [forIn'_eq_forIn]\n@[congr] theorem forIn'_congr [Monad m] {as bs : List \u03b1}",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Data/List/Monadic.lean",
    "definition_type": "theorem",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Data/List/Monadic.lean",
    "definition_name": "forIn_cons",
    "has_proof": true
  }
}