{
  "content": "(\u2200 {m'' a b}, P m'' \u2192 P (m''.insert a b)) \u2192 P m \u2192 P m' } := \u27e8m, fun _ _ => id\u27e9\n  for \u27e8a, b\u27e9 in l do\n    r := \u27e8r.1.insert a b, fun _ h hm => h (r.2 _ h hm)\u27e9\n  return r\nsection\nvariable {\u03b2 : Type v}\n@[inline] def Const.get [BEq \u03b1] [Hashable \u03b1] (m : Raw\u2080 \u03b1 (fun _ => \u03b2)) (a : \u03b1)\n    (hma : m.contains a) : \u03b2 :=\n  let \u27e8\u27e8_, buckets\u27e9, h\u27e9 := m\n  let idx := mkIdx buckets.size h (hash a)\n  buckets[idx.1].get a hma\n@[inline] def Const.get! [BEq \u03b1] [Hashable \u03b1] [Inhabited \u03b2] (m : Raw\u2080 \u03b1 (fun _ => \u03b2)) (a : \u03b1) : \u03b2 :=\n  let \u27e8\u27e8_, buckets\u27e9, h\u27e9 := m\n  let idx := mkIdx buckets.size h (hash a)\n  buckets[idx.1].get! a\n@[inline] def Const.insertMany {\u03c1 : Type w} [ForIn Id \u03c1 (\u03b1 \u00d7 \u03b2)] [BEq \u03b1] [Hashable \u03b1]\n    (m : Raw\u2080 \u03b1 (fun _ => \u03b2)) (l : \u03c1) :\n    { m' : Raw\u2080 \u03b1 (fun _ => \u03b2) // \u2200 (P : Raw\u2080 \u03b1 (fun _ => \u03b2) \u2192 Prop),\n      (\u2200 {m'' a b}, P m'' \u2192 P (m''.insert a b)) \u2192 P m \u2192 P m' } := Id.run do\n  let mut r : { m' : Raw\u2080 \u03b1 (fun _ => \u03b2) // \u2200 (P : Raw\u2080 \u03b1 (fun _ => \u03b2) \u2192 Prop),",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Std/Data/DHashMap/Internal/Defs.lean",
    "definition_type": "def",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Std/Data/DHashMap/Internal/Defs.lean",
    "definition_name": "empty"
  }
}