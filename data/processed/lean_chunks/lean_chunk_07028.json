{
  "content": "(danglingDot       : Bool)\n    : CancellableM (Array CompletionItem) :=\n  runM params completionInfoPos ctx lctx do\n    idCompletionCore ctx stx id hoverInfo danglingDot\ndef dotCompletion\n    (params            : CompletionParams)\n    (completionInfoPos : Nat)\n    (ctx               : ContextInfo)\n    (info              : TermInfo)\n    : CancellableM (Array CompletionItem) :=\n  runM params completionInfoPos ctx info.lctx do\n    let nameSet \u2190 try\n      getDotCompletionTypeNames (\u2190 instantiateMVars (\u2190 inferType info.expr))\n    catch _ =>\n      pure RBTree.empty\n    if nameSet.isEmpty then\n      return\n    forEligibleDeclsWithCancellationM fun declName c => do\n      let unnormedTypeName := declName.getPrefix\n      if ! nameSet.contains unnormedTypeName then\n        return\n      let some declName \u2190 normPrivateName? declName\n        | return\n      let typeName := declName.getPrefix\n      if ! (\u2190 isDotCompletionMethod typeName c) then\n        return",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Lean/Server/Completion/CompletionCollectors.lean",
    "definition_type": "structure",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Lean/Server/Completion/CompletionCollectors.lean",
    "definition_name": "section"
  }
}