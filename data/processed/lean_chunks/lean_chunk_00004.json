{
  "content": "theorem rotateLeftNeLeaf : \u2200 (n : Rbnode \u03b1 \u03b2) (h : n \u2260 leaf), rotateLeft n h \u2260 leaf\n| Node _ hl _ _ (Node red _ _ _ _),   _, h  => ifNodeNodeNeLeaf h\n| leaf, h, _                                => absurd rfl h\n| Node _ _ _ _ (Node black _ _ _ _),   _, h => Rbnode.noConfusion h\ndef rotateRight : \u2200 (n : Rbnode \u03b1 \u03b2), n \u2260 leaf \u2192 Rbnode \u03b1 \u03b2\n| n@(Node hc (Node red xl xk xv xr) hk hv hr), _ =>\n  if isRed xl\n  then (Node hc xl xk xv (Node red xr hk hv hr))\n  else n\n| leaf, h => absurd rfl h\n| e, _    => e\ntheorem rotateRightNeLeaf : \u2200 (n : Rbnode \u03b1 \u03b2) (h : n \u2260 leaf), rotateRight n h \u2260 leaf\n| Node _ (Node red _ _ _ _) _ _ _,   _, h   => ifNodeNodeNeLeaf h\n| leaf, h, _                                => absurd rfl h\n| Node _ (Node black _ _ _ _) _ _ _,   _, h => Rbnode.noConfusion h\ndef flip : Rbcolor \u2192 Rbcolor\n| red   => black\n| black => red\ndef flipColor : Rbnode \u03b1 \u03b2 \u2192 Rbnode \u03b1 \u03b2\n| Node c l k v r   => Node (flip c) l k v r\n| leaf             => leaf",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/tests/bench/rbmap3.lean",
    "definition_type": "theorem",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/tests/bench/rbmap3.lean",
    "definition_name": "rotateLeftNeLeaf",
    "has_proof": false
  }
}