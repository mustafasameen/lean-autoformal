{
  "content": "theorem map_prod_fst_toList_eq_keys [EquivBEq \u03b1] [LawfulHashable \u03b1] :\n    (Raw.Const.toList m.1).map Prod.fst = m.1.keys := by\n  simp_to_model using List.map_prod_fst_map_toProd_eq_keys\ntheorem length_toList [EquivBEq \u03b1] [LawfulHashable \u03b1] (h : m.1.WF) :\n    (Raw.Const.toList m.1).length = m.1.size := by\n  simp_to_model using List.length_map\ntheorem isEmpty_toList [EquivBEq \u03b1] [LawfulHashable \u03b1] (h : m.1.WF) :\n    (Raw.Const.toList m.1).isEmpty = m.1.isEmpty := by\n  simp_to_model\n  rw [Bool.eq_iff_iff, List.isEmpty_iff,List.isEmpty_iff, List.map_eq_nil_iff]\ntheorem mem_toList_iff_get?_eq_some [LawfulBEq \u03b1] (h : m.1.WF)\n    {k : \u03b1}",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Std/Data/DHashMap/Internal/RawLemmas.lean",
    "definition_type": "theorem",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Std/Data/DHashMap/Internal/RawLemmas.lean",
    "definition_name": "map_prod_fst_toList_eq_keys",
    "has_proof": true
  }
}