{
  "content": "theorem Injective.hasLeftInverse (hf : Injective f) : HasLeftInverse f :=\n  \u27e8invFun f, sorry\u27e9\nend Function\nend Mathlib.Logic.Function.Basic\nsection Mathlib.Data.FunLike.Basic\nclass DFunLike (F : Sort _) (\u03b1 : outParam (Sort _)) (\u03b2 : outParam <| \u03b1 \u2192 Sort _) where\n  coe : F \u2192 \u2200 a : \u03b1, \u03b2 a\nabbrev FunLike F \u03b1 \u03b2 := DFunLike F \u03b1 fun _ => \u03b2\ninstance (priority := 100) hasCoeToFun {F \u03b1 \u03b2}",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/tests/lean/run/3807.lean",
    "definition_type": "theorem",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/tests/lean/run/3807.lean",
    "definition_name": "Injective",
    "has_proof": false
  }
}