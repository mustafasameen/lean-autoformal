{
  "content": "class LawfulGetElem (cont : Type u) (idx : Type v) (elem : outParam (Type w))\n   (dom : outParam (cont \u2192 idx \u2192 Prop)) [ge : GetElem? cont idx elem dom] : Prop where\n  getElem?_def (c : cont) (i : idx) [Decidable (dom c i)] :\n      c[i]? = if h : dom c i then some (c[i]'h) else none := by\n    intros\n    try simp only [getElem?] <;> congr\n  getElem!_def [Inhabited elem] (c : cont) (i : idx) :\n      c[i]! = match c[i]? with | some e => e | none => default := by\n    intros\n    simp only [getElem!, getElem?, outOfBounds_eq_default]\nexport LawfulGetElem (getElem?_def getElem!_def)\ninstance (priority := low) [GetElem coll idx elem valid] [\u2200 xs i, Decidable (valid xs i)] :\n    LawfulGetElem coll idx elem valid where\ntheorem getElem?_pos [GetElem? cont idx elem dom] [LawfulGetElem cont idx elem dom]\n    (c : cont) (i : idx) (h : dom c i) : c[i]? = some (c[i]'h) := by\n  have : Decidable (dom c i) := .isTrue h\n  rw [getElem?_def]\n  exact dif_pos h",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/GetElem.lean",
    "definition_type": "class",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/GetElem.lean",
    "definition_name": "LawfulGetElem",
    "has_proof": true
  }
}