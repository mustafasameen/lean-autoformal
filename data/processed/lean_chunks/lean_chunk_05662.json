{
  "content": "theorem map_reverse (f : \u03b1 \u2192 \u03b2) (xs : Vector \u03b1 n) : xs.reverse.map f = (xs.map f).reverse := by\n  rcases xs with \u27e8xs, rfl\u27e9\n  simp [Array.map_reverse]\n@[simp] theorem reverse_append (xs : Vector \u03b1 n) (ys : Vector \u03b1 m) :\n    (xs ++ ys).reverse = (ys.reverse ++ xs.reverse).cast (by omega) := by\n  rcases xs with \u27e8xs, rfl\u27e9\n  rcases ys with \u27e8ys, rfl\u27e9\n  simp [Array.reverse_append]\n@[simp] theorem reverse_eq_append_iff {xs : Vector \u03b1 (n + m)}",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Data/Vector/Lemmas.lean",
    "definition_type": "theorem",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Data/Vector/Lemmas.lean",
    "definition_name": "map_reverse",
    "has_proof": true
  }
}