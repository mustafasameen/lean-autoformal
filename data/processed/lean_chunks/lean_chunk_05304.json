{
  "content": "theorem tail_range' (n : Nat) : (range' s n step).tail = range' (s + step) (n - 1) step := by\n  cases n with\n  | zero => simp\n  | succ n => simp [range'_succ]\n@[simp] theorem range'_inj : range' s n = range' s' n' \u2194 n = n' \u2227 (n = 0 \u2228 s = s') := by\n  constructor\n  \u00b7 intro h\n    have h' := congrArg List.length h\n    simp at h'\n    subst h'\n    cases n with\n    | zero => simp\n    | succ n =>\n      simp only [range'_succ] at h\n      simp_all\n  \u00b7 rintro \u27e8rfl, rfl | rfl\u27e9 <;> simp\ntheorem mem_range' : \u2200{n}",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Data/List/Range.lean",
    "definition_type": "theorem",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Data/List/Range.lean",
    "definition_name": "tail_range",
    "has_proof": true
  }
}