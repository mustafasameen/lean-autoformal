{
  "content": "\u00b7 apply monotone_of_monotone_apply\n          intro y\n          apply ih\n@[partial_fixpoint_monotone]\ntheorem monotone_forM (f : \u03b3 \u2192 \u03b1 \u2192 m PUnit) (xs : List \u03b1) (hmono : monotone f) :\n    monotone (fun x => xs.forM (f x)) := by\n  induction xs with\n  | nil => apply monotone_const\n  | cons _ _ ih =>\n    apply monotone_bind\n    \u00b7 apply monotone_apply\n      apply hmono\n    \u00b7 apply monotone_of_monotone_apply\n      intro y\n      apply ih\n@[partial_fixpoint_monotone]\ntheorem monotone_filterAuxM\n  {m : Type \u2192 Type v}",
  "metadata": {
    "source": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Internal/Order/Lemmas.lean",
    "definition_type": "theorem",
    "parent_file": "/Users/mustafasameen/Documents/lean-autoformal/data/raw/lean4/src/Init/Internal/Order/Lemmas.lean",
    "definition_name": "Functor",
    "has_proof": true
  }
}